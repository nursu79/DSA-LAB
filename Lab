import java.util.Stack;

class Main {
    // Linear Cube
    static class LinearCube {
        private int length;

        public LinearCube(int length) {
            this.length = length;
        }

        public int calculateVolume() {
            return length * length * length;
        }
    }

    // Circular Cube
    static class CircularCube {
        private int radius;

        public CircularCube(int radius) {
            this.radius = radius;
        }

        public double calculateVolume() {
            return (4.0 / 3.0) * Math.PI * Math.pow(radius, 3);
        }
    }

    // Linear Cube using Stacks
    static class LinearCubeStack {
        private Stack<Integer> stack;

        public LinearCubeStack() {
            stack = new Stack<>();
        }

        public void push(int length) {
            stack.push(length);
        }

        public int pop() {
            return stack.pop();
        }

        public int calculateVolume() {
            int length = stack.peek();
            return length * length * length;
        }
    }

    public static void main(String[] args) {
        // Linear Cube
        LinearCube linearCube = new LinearCube(5);
        int linearCubeVolume = linearCube.calculateVolume();
        System.out.println("Linear Cube Volume: " + linearCubeVolume);

        // Circular Cube
        CircularCube circularCube = new CircularCube(5);
        double circularCubeVolume = circularCube.calculateVolume();
        System.out.println("Circular Cube Volume: " + circularCubeVolume);

        // Linear Cube using Stacks
        LinearCubeStack linearCubeStack = new LinearCubeStack();
        linearCubeStack.push(5);
        int linearCubeStackVolume = linearCubeStack.calculateVolume();
        System.out.println("Linear Cube (Using Stacks) Volume: " + linearCubeStackVolume);
    }
}
